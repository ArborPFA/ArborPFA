  /// \file ArborContentApi.cc
/*
 *
 * ArborContentApi.cc source template automatically generated by a class generator
 * Creation date : dim. fï¿½vr. 9 2014
 *
 * This file is part of ArborPFA libraries.
 * 
 * ArborPFA is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborPFA is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborPFA.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


// arborpfa
#include "arborpfa/api/ArborContentApi.h"
#include "arborpfa/algorithm/ArborAlgorithm.h"
#include "arborpfa/algorithm/ArborAlgorithmFactory.h"
#include "arborpfa/content/IBranchBuilder.h"
#include "arborpfa/content/ITreeBuilder.h"
#include "arborpfa/arbor/ArborTypes.h"

using namespace pandora;

namespace arbor
{


//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::Object::Create(const ArborAlgorithm &algorithm, arbor::Object *&pObject, CaloHit *pInputCaloHit)
{
	return algorithm.GetArborContentApiImpl()->CreateObject(pObject, pInputCaloHit);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::Cluster::Create(const ArborAlgorithm &algorithm, arbor::Cluster *&pCluster, arbor::Object *pSeedObject)
{
	return algorithm.GetArborContentApiImpl()->CreateCluster(pCluster, pSeedObject);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::Branch::Create(const IBranchBuilder &branchBuilder, arbor::Branch *&pBranch, arbor::Tree *pTree)
{
	return branchBuilder.GetArborContentApiImpl()->CreateBranch(pBranch, pTree);
}
/*
 * Object related methods
 */
pandora::StatusCode ArborContentApi::GetCurrentObjectList(const ArborAlgorithm &algorithm, const ObjectList *&pObjectList)
{
	std::string arborObjectListName;
	return algorithm.GetArborContentApiImpl()->GetCurrentObjectList(pObjectList, arborObjectListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::GetCurrentObjectList(const ArborAlgorithm &algorithm, const ObjectList *&pObjectList, std::string &listName)
{
	return algorithm.GetArborContentApiImpl()->GetCurrentObjectList(pObjectList, listName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::GetCurrentObjectListName(const ArborAlgorithm &algorithm, std::string &listName)
{
	return algorithm.GetArborContentApiImpl()->GetCurrentObjectListName(listName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::GetObjectList(const ArborAlgorithm &algorithm, const std::string &listName, const ObjectList *&pObjectList)
{
	return algorithm.GetArborContentApiImpl()->GetObjectList(listName, pObjectList);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::CreateTemporaryObjectListAndSetCurrent(const ArborAlgorithm &algorithm, const ObjectList *&pObjectList, std::string &temporaryListName)
{
	return algorithm.GetArborContentApiImpl()->CreateTemporaryObjectListAndSetCurrent(algorithm, pObjectList, temporaryListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::SaveObjectList(const ArborAlgorithm &algorithm, const std::string &newListName)
{
	return algorithm.GetArborContentApiImpl()->SaveObjectList(newListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::SaveObjectList(const ArborAlgorithm &algorithm, const std::string &newObjectListName, const ObjectList &objectsToSave)
{
	return algorithm.GetArborContentApiImpl()->SaveObjectList(newObjectListName, objectsToSave);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::SaveObjectList(const ArborAlgorithm &algorithm, const std::string &oldObjectListName, const std::string &newObjectListName)
{
	return algorithm.GetArborContentApiImpl()->SaveObjectList(oldObjectListName, newObjectListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::SaveObjectList(const ArborAlgorithm &algorithm, const std::string &oldObjectListName, const std::string &newObjectListName, const ObjectList &objectsToSave)
{
	return algorithm.GetArborContentApiImpl()->SaveObjectList(oldObjectListName, newObjectListName, objectsToSave);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::ReplaceCurrentObjectList(const ArborAlgorithm &algorithm, const std::string &newListName)
{
	return algorithm.GetArborContentApiImpl()->ReplaceCurrentObjectList(algorithm, newListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::TemporarilyReplaceCurrentObjectList(const ArborAlgorithm &algorithm, const std::string &newObjectListName)
{
	return algorithm.GetArborContentApiImpl()->TemporarilyReplaceCurrentObjectList(newObjectListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::DropCurrentObjectList(const ArborAlgorithm &algorithm)
{
	return algorithm.GetArborContentApiImpl()->DropCurrentObjectList();
}

/**
 * Cluster related methods
 */
pandora::StatusCode ArborContentApi::GetCurrentClusterList(const ArborAlgorithm &algorithm, const ClusterList *&pClusterList)
{
	std::string arborClusterListName;
	return algorithm.GetArborContentApiImpl()->GetCurrentClusterList(pClusterList, arborClusterListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::GetCurrentClusterList(const ArborAlgorithm &algorithm, const ClusterList *&pClusterList, std::string &listName)
{
	return algorithm.GetArborContentApiImpl()->GetCurrentClusterList(pClusterList, listName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::GetCurrentClusterListName(const ArborAlgorithm &algorithm, std::string &listName)
{
	return algorithm.GetArborContentApiImpl()->GetCurrentClusterListName(listName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::GetClusterList(const ArborAlgorithm &algorithm, const std::string &listName, const ClusterList *&pClusterList)
{
	return algorithm.GetArborContentApiImpl()->GetClusterList(listName, pClusterList);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::CreateTemporaryClusterListAndSetCurrent(const ArborAlgorithm &algorithm, const ClusterList *&pClusterList, std::string &temporaryListName)
{
	return algorithm.GetArborContentApiImpl()->CreateTemporaryClusterListAndSetCurrent(algorithm, pClusterList, temporaryListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::SaveClusterList(const ArborAlgorithm &algorithm, const std::string &newListName)
{
	return algorithm.GetArborContentApiImpl()->SaveClusterList(newListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::SaveClusterList(const ArborAlgorithm &algorithm, const std::string &newClusterListName, const ClusterList &objectsToSave)
{
	return algorithm.GetArborContentApiImpl()->SaveClusterList(newClusterListName, objectsToSave);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::SaveClusterList(const ArborAlgorithm &algorithm, const std::string &oldClusterListName, const std::string &newClusterListName)
{
	return algorithm.GetArborContentApiImpl()->SaveClusterList(oldClusterListName, newClusterListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::SaveClusterList(const ArborAlgorithm &algorithm, const std::string &oldClusterListName, const std::string &newClusterListName, const ClusterList &objectsToSave)
{
	return algorithm.GetArborContentApiImpl()->SaveClusterList(oldClusterListName, newClusterListName, objectsToSave);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::ReplaceCurrentClusterList(const ArborAlgorithm &algorithm, const std::string &newListName)
{
	return algorithm.GetArborContentApiImpl()->ReplaceCurrentClusterList(algorithm, newListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::TemporarilyReplaceCurrentClusterList(const ArborAlgorithm &algorithm, const std::string &newClusterListName)
{
	return algorithm.GetArborContentApiImpl()->TemporarilyReplaceCurrentClusterList(newClusterListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::DropCurrentClusterList(const ArborAlgorithm &algorithm)
{
	return algorithm.GetArborContentApiImpl()->DropCurrentClusterList();
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::DeleteCluster(const ArborAlgorithm &algorithm, arbor::Cluster *pCluster)
{
	return algorithm.GetArborContentApiImpl()->DeleteCluster(pCluster);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::RemoveBranchFromTree(const IBranchBuilder &branchBuilder, arbor::Tree *pTree, arbor::Branch *pBranch)
{
	return branchBuilder.GetArborContentApiImpl()->RemoveBranchFromTree(pTree, pBranch);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::MoveTree(const ArborAlgorithm &algorithm, arbor::Cluster *pOldCluster, arbor::Cluster *pNewCluster, Tree *pMovingTree)
{
	return algorithm.GetArborContentApiImpl()->MoveTree(pOldCluster, pNewCluster, pMovingTree);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::RunObjectCreationAlgorithm(const ArborAlgorithm &arborAlgorithm, const std::string &arborObjectAlgorithmName,
		const ObjectList *&pObjectList)
{
	std::string newObjectListName;
	return arborAlgorithm.GetArborContentApiImpl()->RunObjectCreationAlgorithm(arborAlgorithm, arborObjectAlgorithmName, pObjectList, newObjectListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::RunObjectCreationAlgorithm(const ArborAlgorithm &arborAlgorithm, const std::string &arborObjectAlgorithmName,
		const ObjectList *&pObjectList, std::string &newObjectListName)
{
	return arborAlgorithm.GetArborContentApiImpl()->RunObjectCreationAlgorithm(arborAlgorithm, arborObjectAlgorithmName, pObjectList, newObjectListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::RunClusterCreationAlgorithm(const ArborAlgorithm &arborAlgorithm, const std::string &arborClusterAlgorithmName,
		const ClusterList *&pClusterList)
{
	std::string newClusterListName;
	return arborAlgorithm.GetArborContentApiImpl()->RunClusterCreationAlgorithm(arborAlgorithm, arborClusterAlgorithmName, pClusterList, newClusterListName);
}

//---------------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborContentApi::RunClusterCreationAlgorithm(const ArborAlgorithm &arborAlgorithm, const std::string &arborClusterAlgorithmName,
		const ClusterList *&pClusterList, std::string &newClusterListName)
{
	return arborAlgorithm.GetArborContentApiImpl()->RunClusterCreationAlgorithm(arborAlgorithm, arborClusterAlgorithmName, pClusterList, newClusterListName);
}



} 

