  /// \file TreeClusteringAlgorithm.cc
/*
 *
 * TreeClusteringAlgorithm.cc source template automatically generated by a class generator
 * Creation date : lun. sept. 22 2014
 *
 * This file is part of ArborPFA libraries.
 * 
 * ArborPFA is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborPFA is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborPFA.  If not, see <http://www.gnu.org/licenses/>.	
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#include "arborpfa/algorithm/TreeClusteringAlgorithm.h"

// arbor
#include "arborpfa/arbor/AlgorithmHeaders.h"

// pandora
#include "Pandora/PandoraInternal.h"

namespace arbor
{

pandora::StatusCode TreeClusteringAlgorithm::RunArborAlgorithm()
{
	const ObjectList *pObjectList = NULL;
	PANDORA_RETURN_RESULT_IF(pandora::STATUS_CODE_SUCCESS, !=, ArborContentApi::GetCurrentObjectList(*this, pObjectList));

	for(ObjectList::const_iterator objIter = pObjectList->begin() , objEndIter = pObjectList->end() ;
			objEndIter != objIter ; ++objIter)
	{
		Object *pObject = *objIter;

		// we use only seed object to build clusters
		if(NULL != pObject->GetCurrentBackwardConnector())
			continue;

		arbor::Cluster *pCluster = NULL;
		PANDORA_RETURN_RESULT_IF(pandora::STATUS_CODE_SUCCESS, !=, ArborContentApi::Cluster::Create(*this, pCluster, pObject));
	}

	return pandora::STATUS_CODE_SUCCESS;
}

pandora::StatusCode TreeClusteringAlgorithm::ReadSettings(const pandora::TiXmlHandle xmlHandle)
{
	return pandora::STATUS_CODE_SUCCESS;
}


} 

