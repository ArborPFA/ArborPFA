/*
 *
 * ArborAlgorithmFactory.cc source template automatically generated by a class generator
 * Creation date : lun. fï¿½vr. 10 2014
 *
 * This file is part of ArborPFA libraries.
 * 
 * ArborPFA is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborPFA is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborPFA.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#include "arborpfa/algorithm/ArborAlgorithmFactory.h"

namespace arbor
{

ArborAlgorithmFactory::ArborAlgorithmFactory() :
		m_pArbor(NULL)
{

}

//--------------------------------------------------------------------------------------------------------

pandora::Algorithm *ArborAlgorithmFactory::CreateAlgorithm() const
{
	ArborAlgorithm *pAlgorithm = this->CreateArborAlgorithm();
	PANDORA_THROW_RESULT_IF(pandora::STATUS_CODE_SUCCESS, !=, pAlgorithm->RegisterArbor(m_pArbor));

	return pAlgorithm;
}

//--------------------------------------------------------------------------------------------------------

pandora::StatusCode ArborAlgorithmFactory::RegisterArbor(Arbor *pArbor)
{
	if(NULL == pArbor)
		return pandora::STATUS_CODE_FAILURE;

	m_pArbor = pArbor;

	return pandora::STATUS_CODE_SUCCESS;
}


} 

