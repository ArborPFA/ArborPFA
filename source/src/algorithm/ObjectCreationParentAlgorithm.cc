  /// \file ObjectCreationParentAlgorithm.cc
/*
 *
 * ObjectCreationParentAlgorithm.cc source template automatically generated by a class generator
 * Creation date : lun. sept. 22 2014
 *
 * This file is part of ArborPFA libraries.
 * 
 * ArborPFA is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborPFA is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborPFA.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#include "arborpfa/algorithm/ObjectCreationParentAlgorithm.h"

// arbor
#include "arborpfa/arbor/AlgorithmHeaders.h"

namespace arbor
{

//----------------------------------------------------------------------------------------------------------------------

pandora::StatusCode ObjectCreationParentAlgorithm::RunArborAlgorithm()
{
 // If specified, change the current calo hit list, i.e. the input of the object creation algorithm
 std::string originalCaloHitListName;

 if (!m_inputCaloHitListName.empty())
 {
		PANDORA_RETURN_RESULT_IF(pandora::STATUS_CODE_SUCCESS, !=, PandoraContentApi::GetCurrentCaloHitListName(*this, originalCaloHitListName));
		PANDORA_RETURN_RESULT_IF(pandora::STATUS_CODE_SUCCESS, !=, PandoraContentApi::ReplaceCurrentCaloHitList(*this, m_inputCaloHitListName));
 }

	// Run the object formation algorithm
	const ObjectList *pObjectList = NULL;
	PANDORA_RETURN_RESULT_IF(pandora::STATUS_CODE_SUCCESS, !=, ArborContentApi::RunObjectCreationAlgorithm(*this, m_objectCreationAlgorithmName, pObjectList));

	// Save the new arbor object list
	if (!pObjectList->empty())
	{
		PANDORA_RETURN_RESULT_IF(pandora::STATUS_CODE_SUCCESS, !=, ArborContentApi::SaveObjectList(*this, m_objectListName));

		if (m_replaceCurrentObjectList)
		{
			PANDORA_RETURN_RESULT_IF(pandora::STATUS_CODE_SUCCESS, !=, ArborContentApi::ReplaceCurrentObjectList(*this, m_objectListName));
		}
	}

 // Unless specified, return current calo hit list to that when algorithm started
 if (m_restoreOriginalCaloHitList && !m_inputCaloHitListName.empty())
 {
  PANDORA_RETURN_RESULT_IF(pandora::STATUS_CODE_SUCCESS, !=, PandoraContentApi::ReplaceCurrentCaloHitList(*this, originalCaloHitListName));
 }

	return pandora::STATUS_CODE_SUCCESS;
}

//----------------------------------------------------------------------------------------------------------------------

pandora::StatusCode ObjectCreationParentAlgorithm::ReadSettings(const pandora::TiXmlHandle xmlHandle)
{
	m_restoreOriginalCaloHitList = true;
	PANDORA_RETURN_RESULT_IF_AND_IF(pandora::STATUS_CODE_SUCCESS, pandora::STATUS_CODE_NOT_FOUND, !=, pandora::XmlHelper::ReadValue(xmlHandle,
	     "RestoreOriginalCaloHitList", m_restoreOriginalCaloHitList));

	m_replaceCurrentObjectList = true;
	PANDORA_RETURN_RESULT_IF_AND_IF(pandora::STATUS_CODE_SUCCESS, pandora::STATUS_CODE_NOT_FOUND, !=, pandora::XmlHelper::ReadValue(xmlHandle,
	     "ReplaceCurrentObjectList", m_replaceCurrentObjectList));

	m_inputCaloHitListName = "";
	PANDORA_RETURN_RESULT_IF_AND_IF(pandora::STATUS_CODE_SUCCESS, pandora::STATUS_CODE_NOT_FOUND, !=, pandora::XmlHelper::ReadValue(xmlHandle,
	     "InputCaloHitListName", m_inputCaloHitListName));

	m_objectListName = "ArborObjectList";
	PANDORA_RETURN_RESULT_IF(pandora::STATUS_CODE_SUCCESS, !=, pandora::XmlHelper::ReadValue(xmlHandle,
	     "ObjectListName", m_objectListName));

 // Daughter object creation algorithm
 PANDORA_RETURN_RESULT_IF(pandora::STATUS_CODE_SUCCESS, !=, pandora::XmlHelper::ProcessAlgorithm(*this, xmlHandle,
     "ObjectFormation", m_objectCreationAlgorithmName));

	return pandora::STATUS_CODE_SUCCESS;
}


} 

