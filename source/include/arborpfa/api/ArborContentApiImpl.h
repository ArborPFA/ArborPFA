  /// \file ArborContentApiImpl.h
/*
 *
 * ArborContentApiImpl.h header template automatically generated by a class generator
 * Creation date : dim. fï¿½vr. 9 2014
 *
 * This file is part of ArborPFA libraries.
 * 
 * ArborPFA is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborPFA is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborPFA.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef ARBORCONTENTAPIIMPL_H
#define ARBORCONTENTAPIIMPL_H

#include "Pandora/PandoraInternal.h"
#include "Pandora/StatusCodes.h"

#include "arborpfa/arbor/ArborTypes.h"

namespace arborpfa {

class ArborAlgorithm;
class Arbor;

/** 
 * @brief ArborContentApiImpl class
 */ 
class ArborContentApiImpl 
{
 public:

		/**
			*
			*/
  pandora::StatusCode CreateConnector(ArborObjectPair *pPair, arborpfa::Connector *&pConnector, float weight = 1.f) const;

		/**
			*
			*/
		pandora::StatusCode CreateConnector(ArborObject *pObj1, ArborObject *pObj2, arborpfa::Connector *&pConnector, float weight = 1.f) const;

		/**
		 *
		 */
	 pandora::StatusCode GetCurrentConnectorList(const ConnectorList *&pConnectorList, std::string &listName) const;

		/**
		 *
		 */
	 pandora::StatusCode GetCurrentConnectorListName(std::string &listName) const;

		/**
		 *
		 */
	 pandora::StatusCode GetConnectorList(const std::string &listName, const ConnectorList *&pConnectorList) const;

		/**
		 *
		 */
  pandora::StatusCode CreateTemporaryConnectorListAndSetCurrent(const ArborAlgorithm &algorithm, const ConnectorList *&pConnectorList, std::string &temporaryListName) const;

		/**
		 *
		 */
	 pandora::StatusCode SaveConnectorList(const std::string &newListName) const;

		/**
		 *
		 */
	 pandora::StatusCode SaveConnectorList(const std::string &newConnectorListName, const ConnectorList &connectorsToSave) const;

		/**
		 *
		 */
	 pandora::StatusCode SaveConnectorList(const std::string &oldConnectorListName, const std::string &newConnectorListName) const;

		/**
		 *
		 */
  pandora::StatusCode SaveConnectorList(const std::string &oldConnectorListName, const std::string &newConnectorListName, const ConnectorList &connectorsToSave) const;

		/**
		 *
		 */
	 pandora::StatusCode ReplaceCurrentConnectorList(const ArborAlgorithm &algorithm, const std::string &newListName) const;

		/**
		 *
		 */
  pandora::StatusCode TemporarilyReplaceCurrentConnectorList(const std::string &newConnectorListName) const;

  /**
   *
   */
  pandora::StatusCode DropCurrentConnectorList() const;

  //-----------------------------------------------------------------------------------------------------------------------

		/**
		 *
		 */
	 pandora::StatusCode GetCurrentArborObjectList(const ArborObjectList *&pArborObjectList, std::string &listName) const;

		/**
		 *
		 */
	 pandora::StatusCode GetCurrentArborObjectListName(std::string &listName) const;

		/**
		 *
		 */
	 pandora::StatusCode GetArborObjectList(const std::string &listName, const ArborObjectList *&pArborObjectList) const;

		/**
		 *
		 */
  pandora::StatusCode CreateTemporaryArborObjectListAndSetCurrent(const ArborAlgorithm &algorithm, const ArborObjectList *&pArborObjectList, std::string &temporaryListName) const;

		/**
		 *
		 */
	 pandora::StatusCode SaveArborObjectList(const std::string &newListName) const;

		/**
		 *
		 */
	 pandora::StatusCode SaveArborObjectList(const std::string &newArborObjectListName, const ArborObjectList &connectorsToSave) const;

		/**
		 *
		 */
	 pandora::StatusCode SaveArborObjectList(const std::string &oldArborObjectListName, const std::string &newArborObjectListName) const;

		/**
		 *
		 */
  pandora::StatusCode SaveArborObjectList(const std::string &oldArborObjectListName, const std::string &newArborObjectListName, const ArborObjectList &objectsToSave) const;

		/**
		 *
		 */
	 pandora::StatusCode ReplaceCurrentArborObjectList(const ArborAlgorithm &algorithm, const std::string &newListName) const;

		/**
		 *
		 */
  pandora::StatusCode TemporarilyReplaceCurrentArborObjectList(const std::string &newArborObjectListName) const;

  /**
   *
   */
  pandora::StatusCode DropCurrentArborObjectList() const;

 private:

		/**
			* @brief  Constructor
			*/
		ArborContentApiImpl(Arbor *pArbor);

		/**
		 *
		 */
//		pandora::StatusCode PrepareForDeletion(const Connector *const pConnector) const;
//
//		/**
//		 *
//		 */
//		pandora::StatusCode PrepareForDeletion(const ConnectorList &connectorList) const;


		Arbor       *m_pArbor;

		friend class Arbor;

}; 

} 

#endif  //  ARBORCONTENTAPIIMPL_H
