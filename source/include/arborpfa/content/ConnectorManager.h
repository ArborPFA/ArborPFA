  /// \file ConnectorManager.h
/*
 *
 * ConnectorManager.h header template automatically generated by a class generator
 * Creation date : ven. fï¿½vr. 7 2014
 *
 * This file is part of ArborPFA libraries.
 * 
 * ArborPFA is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborPFA is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborPFA.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef ARBORMANAGER_H
#define ARBORMANAGER_H

#include "Managers/AlgorithmObjectManager.h"

#include "Pandora/PandoraInternal.h"

#include "arborpfa/content/Connector.h"

namespace arborpfa {

class ArborContentApiImpl;
class ArborAlgorithm;

/** 
 * @brief ArborManager class
 */ 
class ConnectorManager : public pandora::AlgorithmObjectManager<Connector>
{
 public:

		/**
			* @brief Default constructor
			*/
	 ConnectorManager();

		/**
			* @brief Destructor
			*/
		virtual ~ConnectorManager();

 protected:

		/**
		 * @brief Create a connector
		 *
		 * @param pParameter parameters to create a connector
		 * @param pConnector to receive the address of the connector created
		 */
		pandora::StatusCode CreateConnector(ArborObject *pObj1, ArborObject *pObj2, Connector *&pConnector, float weight = 1.f);

		/**
		 *
		 */
		pandora::StatusCode CreateTemporaryListAndSetCurrent(const ArborAlgorithm *pAlgorithm, std::string &temporaryListName);

		/**
		 *
		 */
		pandora::StatusCode	ReplaceCurrentAndAlgorithmInputLists(const ArborAlgorithm *algorithm, const std::string &newListName);


 friend class ArborContentApiImpl;
 friend class ArborImpl;
 friend class ArborApiImpl;

};

} 

#endif  //  CONNECTORMANAGER_H
