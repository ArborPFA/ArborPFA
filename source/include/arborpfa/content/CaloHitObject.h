/*
 *
 * CaloHitObject.h header template automatically generated by a class generator
 * Creation date : mer. fï¿½vr. 19 2014
 *
 * This file is part of ArborPFA libraries.
 * 
 * ArborPFA is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborPFA is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborPFA.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef SIMPLECALOHITOBJECT_H
#define SIMPLECALOHITOBJECT_H

// arborpfa
#include "arborpfa/content/ArborObjectImpl.h"

// pandora
#include "Objects/CaloHit.h"
#include "Pandora/PandoraInputTypes.h"

namespace arborpfa
{

class ArborObjectManager;

/** 
 * @brief CaloHitObject class
 */ 
class CaloHitObject : public ArborObjectImpl
{
 public:

	/**
		* @brief Constructor
		*/
	CaloHitObject(pandora::CaloHit *pCaloHit);

	/**
		* @brief Dtor
		*/
	virtual ~CaloHitObject();

		/**
			*
			*/
		pandora::CaloHit *GetCaloHit() const;

		/**
		 * @brief Merge the content of the object in the cluster.
		 *
		 * @param pCluster the cluster into which the content will be merge
		 */
		virtual pandora::StatusCode MergeContentInCluster(const pandora::Algorithm &algorithm, pandora::Cluster *pCluster);

		/**
		 *
		 */
		pandora::StatusCode CreateCluster(const pandora::Algorithm &algorithm, pandora::Cluster *&pCluster);

 protected:

		// members
		pandora::CaloHit            *m_pCaloHit;

		// friend scope
		friend class ArborObjectManager;

};

//------------------------------------------------------------------------------------------------------------------------

inline pandora::CaloHit *CaloHitObject::GetCaloHit() const
{
	return m_pCaloHit;
}


} 

#endif  //  SIMPLECALOHITOBJECT_H
