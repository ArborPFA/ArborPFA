  /// \file IEnergyFunction.h
/*
 *
 * IEnergyFunction.h header template automatically generated by a class generator
 * Creation date : sam. sept. 27 2014
 *
 * This file is part of ArborPFA libraries.
 * 
 * ArborPFA is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborPFA is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborPFA.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef IENERGYFUNCTION_H
#define IENERGYFUNCTION_H

#include "arborpfa/arbor/ArborTypes.h"

#include "Pandora/PandoraInputTypes.h"
#include "Pandora/PandoraInternal.h"

namespace pandora
{
	class TiXmlHandle;
}

namespace arbor
{

/** 
 *  @brief  IEnergyFunction class
 *
 *  Interface for energy computation and energy resolution.
 *  The ReadSettings methods allows to configure it via the xml file.
 */ 
class IEnergyFunction 
{
public:

	/**
	 *  @brief  Get the energy associated to the calo hit list
	 *
	 *  @param  pCaloHitList the address of the calo hit list
	 *  @param  energy the energy to receive
	 */
	virtual pandora::StatusCode GetEnergy(const pandora::CaloHitList *const pCaloHitList, float &energy) const = 0;

	/**
	 *  @brief  Get the energy resolution at a given energy point
	 *
	 *  @param  energy the energy point reference of the resolution
	 *  @param  energyResolution the energy resolution to receive
	 */
	virtual pandora::StatusCode GetEnergyResolution(float energy, float &energyResolution) const = 0;

	/**
	 *  @brief  Read settings
	 *
	 *  @param  xmlHandle the xml handle to read settings from
	 */
	virtual pandora::StatusCode ReadSettings(const pandora::TiXmlHandle &xmlHandle) = 0;
}; 

} 

#endif  //  IENERGYFUNCTION_H
