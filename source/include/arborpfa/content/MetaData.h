  /// \file MetaData.h
/*
 *
 * MetaData.h header template automatically generated by a class generator
 * Creation date : mer. juin 18 2014
 *
 * This file is part of ArborPFA libraries.
 * 
 * ArborPFA is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborPFA is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborPFA.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef METADATA_H
#define METADATA_H

#include "arborpfa/arbor/ArborTypes.h"

#include "Pandora/StatusCodes.h"

namespace arbor
{

/**
 * @brief ConnectorInfo class
 */
class ObjectMetaData
{
 protected:

		/**
			* @brief Ctor
			*/
	 ObjectMetaData();

		/**
			*
			*/
	 ObjectMetaData(const ObjectMetaData *pObjectMetaData);

		/**
			* @brief Dtor
			*/
		~ObjectMetaData();

 private:

		ConnectorList          m_connectorList;
		ConnectorList          m_backwardConnectorList;
		ConnectorList          m_forwardConnectorList;
		Connector             *m_pCurrentBackwardConnector;

		friend class Object;
		friend class ObjectManager;
		friend class ReclusterMetaData;
};


/**
 * @brief ReclusterMetaData class
 */
class ReclusterMetaData
{
public:
 /**
  * @brief Ctor
  */
 ReclusterMetaData(ObjectList *pObjectList);

 /**
  * @brief Dtor
  */
 virtual ~ReclusterMetaData();

 /**
  *
  */
 pandora::StatusCode SaveMetaData();

 /**
  *
  */
 pandora::StatusCode LoadMetaData();

 /**
  *
  */
 pandora::StatusCode CreateMetaData(bool copyCurrentMetaData);

 /**
  *
  */
 pandora::StatusCode Clear(bool shouldDelete);

 /**
  *
  */
 ObjectList *GetObjectList() const;

protected:

 ObjectList              *m_pObjectList;
 ObjectMetaDataMap        m_objectMetaDataMap;
};

} 

#endif  //  METADATA_H
