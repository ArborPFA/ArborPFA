/*
 *
 * ArborHelper.h header template automatically generated by a class generator
 * Creation date : lun. mars 10 2014
 *
 * This file is part of ArborPFA libraries.
 * 
 * ArborPFA is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * based upon these libraries are permitted. Any copy of these libraries
 * must include this copyright notice.
 * 
 * ArborPFA is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with ArborPFA.  If not, see <http://www.gnu.org/licenses/>.
 * 
 * @author Remi Ete
 * @copyright CNRS , IPNL
 */


#ifndef ARBORHELPER_H
#define ARBORHELPER_H

// pandora
#include "Pandora/StatusCodes.h"
#include "Objects/CartesianVector.h"

// std
#include <utility>
#include <cstddef>

namespace pandora
{
 class Cluster;
 class CartesianVector;
}

namespace arborpfa
{

/** 
 * @brief ArborHelper class
 */ 
class ArborHelper 
{
 public:

		/**
			*
			*/
	 static pandora::StatusCode GetCentroid(const pandora::Cluster *pCluster, pandora::CartesianVector &centroid);

	 /**
	  *
	  */
	 static pandora::StatusCode GetCentroidDifference(const pandora::Cluster *pCluster1, const pandora::Cluster *pCluster2, float &centroidDifference);

	 /**
	  *
	  */
	 static pandora::StatusCode GetClosestDistanceApproach(const pandora::Cluster *pCluster1, const pandora::Cluster *pCluster2, float &centroidDifference);


};

} 

#endif  //  ARBORHELPER_H
